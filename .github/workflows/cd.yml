name: Movieverse CD

on:
  push:
    branches: [ main ]
    
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [verify]  # Only deploy if verification passes
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json"
        
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [verify]  # Only deploy if verification passes
    defaults:
      run:
        working-directory: src/frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json
    
    - name: Install dependencies
      run: npm install
    
    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        npm install -g vercel
        vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes

  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify repository
      run: |
        if [ -f "src/frontend/package.json" ]; then
          echo "Frontend package.json exists"
        else
          echo "Error: Frontend package.json missing"
          exit 1
        fi
        if [ -f "requirements.txt" ]; then
          echo "Backend requirements.txt exists"
        else
          echo "Error: Backend requirements.txt missing"
          exit 1
        fi
