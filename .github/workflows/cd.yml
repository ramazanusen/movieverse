name: Movieverse CD

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  deployments: write
  pull-requests: write
    
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [verify]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json"
        
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [verify]
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: src/frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('src/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      working-directory: src/frontend
      run: npm install
      
    - name: Build
      working-directory: src/frontend
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25.1.0
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: src/frontend
        vercel-args: '--prod'
        github-comment: false
        github-deployment: false

  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify repository
      run: |
        if [ -f "src/frontend/package.json" ]; then
          echo "Frontend package.json exists"
        else
          echo "Error: Frontend package.json missing"
          exit 1
        fi
        if [ -f "requirements.txt" ]; then
          echo "Backend requirements.txt exists"
        else
          echo "Error: Backend requirements.txt missing"
          exit 1
        fi
